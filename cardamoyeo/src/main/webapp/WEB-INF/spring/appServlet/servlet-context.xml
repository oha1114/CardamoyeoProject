<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/html/**" location="/resources/html/" />
	<resources mapping="/style/**" location="/resources/style/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/bs4/**" location="/resources/bs4/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />
	<resources mapping="/scss/**" location="/resources/scss/" />
	<resources mapping="/upload/**" location="/upload/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- dbcp처리를 위한 DataSource처리 -->
	
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
	<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
	<beans:property name="username" value="study" />
	<beans:property name="password" value="study" />
	</beans:bean>
	
	<!-- MyBatis 맵퍼의 SQL 문장에 대한 파라미터 및 리턴 타입을 담을 클래스를 검색 할 패키지 지정  -->
	<!-- myBatis는 sqlSessionFactoryBean클래스와 sqlSessionTemplate클래스의 객체를 이용하여 sql처리 -->
	 
    <!-- <beans:bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="mapperLocations" value="classpath:com/hk/cardamoyeo/dao/mapper/*.xml" />
    </beans:bean> -->
    
<!--     mapperLocation 속성은 mapper용 xml파일의 경로 표시 -->
    
<!--     sql처리에 필요한 모든 메서드를 가지고 있는 객체 -->
  <!--  
    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg  index="0" ref="sqlSessionFactory"></beans:constructor-arg>
   </beans:bean>
   -->
  
     <!-- jdbc template -->
     <!--  
	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
   -->
   
   
   <!--file upload , multipartResolver는 jsp에서 넘어오는 파일데이터를 받아주는 역할을 함 -->
   <!-- 
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 max upload size in bytes 5MB  
		<beans:property name="maxUploadSize" value="5242880" />
		max size of file in memory(in bytes) 1MB 
		<beans:property name="maxInMemorySize" value="1048576" />
	</beans:bean>
		 -->
		
    
	<!-- new -->
	<!-- transationTemplate처리 (transactionManager를 사용하고 있음) -->
	<!--  
	<beans:bean name = "transactionTemplate" class = "org.springframework.transaction.support.TransactionTemplate">
		<beans:property name ="transactionManager" ref = "transactionManager"></beans:property>
	</beans:bean>
	-->
	<!-- project에 사용하는 dao 클래스의 객체 bean-->
	<!-- dao는 두개의 멤버변수를 가지고 있음  -->
	 
	 
	 <!-- 여러개의 파일 업로드를 위한 설정 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5809081" />
		<beans:property name="maxInMemorySize" value="1048000" />
	</beans:bean>
	
	<!-- 회원가입 메일 인증 -->
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username" value="" /><!-- 메일아이디 입력 -->
		<beans:property name="password" value="" /><!-- 메일비밀번호 입력 -->
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	
	
<!-- 
	<beans:bean name="dao" class="com.hk.cardamoyeo.dao.LogDaoImpl"/>	
	<beans:bean name="ldao" class="com.hk.cardamoyeo.dao.ULikeDaoImpl"/>
	<beans:bean name="rdao" class="com.hk.cardamoyeo.dao.UResDaoImpl"/>
	<beans:bean name="Udao" class="com.hk.cardamoyeo.dao.UserDaoImpl"/>
	 -->
	<beans:bean name="rvdao" class="com.hk.cardamoyeo.dao.UReviewDaoImpl"/>
	<beans:bean name="uqnadao" class="com.hk.cardamoyeo.dao.UQnaDaoImpl"/>
	 
		 <context:annotation-config/>
    	<beans:bean id="i1" class="com.hk.cardamoyeo.service.UInfoServiceImpl"></beans:bean>
    	<beans:bean id="i2" class="com.hk.cardamoyeo.service.LDeleteService"></beans:bean>
    	<beans:bean id="i3" class="com.hk.cardamoyeo.service.ULikeService"></beans:bean>
    	<beans:bean id="i4" class="com.hk.cardamoyeo.service.UResListService"></beans:bean>
    	<beans:bean id="i5" class="com.hk.cardamoyeo.service.UReviewService"></beans:bean>
    	<beans:bean id="i6" class="com.hk.cardamoyeo.service.RvDeleteService"></beans:bean>
    	<beans:bean id="i7" class="com.hk.cardamoyeo.service.UQnaService"></beans:bean>
    	<beans:bean id="i8" class="com.hk.cardamoyeo.service.MemberDeleteService"></beans:bean>
    	<beans:bean id="i9" class="com.hk.cardamoyeo.service.OInfoServiceImpl"></beans:bean>
    	
    	
    	<!-- <beans:bean id="u1" class="com.hk.cardamoyeo.service.UserServiceImpl"/> -->

	<beans:bean name="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<beans:bean id="naverLoginBO" class="com.hk.cardamoyeo.security.naver.NaverLoginBO" />

	
	<context:component-scan base-package="com.hk.cardamoyeo" />
	
	
	
</beans:beans>
